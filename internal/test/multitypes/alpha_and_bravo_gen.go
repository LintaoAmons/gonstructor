// Code generated by gonstructor --type=AlphaStructure --type=BravoStructure --constructorTypes=allArgs,builder --withGetter --output=./alpha_and_bravo_gen.go; DO NOT EDIT.

package multitypes

func NewAlphaStructure(
	foo string,
	bar int,
) *AlphaStructure {
	return &AlphaStructure{
		foo: foo,
		bar: bar,
	}
}

type AlphaStructureBuilder struct {
	foo string
	bar int
}

func NewAlphaStructureBuilder() *AlphaStructureBuilder {
	return &AlphaStructureBuilder{}
}

func (b *AlphaStructureBuilder) Foo(foo string) *AlphaStructureBuilder {
	b.foo = foo
	return b
}

func (b *AlphaStructureBuilder) Bar(bar int) *AlphaStructureBuilder {
	b.bar = bar
	return b
}

func (b *AlphaStructureBuilder) Build() *AlphaStructure {
	return &AlphaStructure{
		foo: b.foo,
		bar: b.bar,
	}
}
func (s *AlphaStructure) GetFoo() string {
	return s.foo
}
func (s *AlphaStructure) GetBar() int {
	return s.bar
}
func NewBravoStructure(
	buz string,
	qux int,
) *BravoStructure {
	return &BravoStructure{
		buz: buz,
		qux: qux,
	}
}

type BravoStructureBuilder struct {
	buz string
	qux int
}

func NewBravoStructureBuilder() *BravoStructureBuilder {
	return &BravoStructureBuilder{}
}

func (b *BravoStructureBuilder) Buz(buz string) *BravoStructureBuilder {
	b.buz = buz
	return b
}

func (b *BravoStructureBuilder) Qux(qux int) *BravoStructureBuilder {
	b.qux = qux
	return b
}

func (b *BravoStructureBuilder) Build() *BravoStructure {
	return &BravoStructure{
		buz: b.buz,
		qux: b.qux,
	}
}
func (s *BravoStructure) GetBuz() string {
	return s.buz
}
func (s *BravoStructure) GetQux() int {
	return s.qux
}
